<?php declare(strict_types=1);
namespace Imbo\Image\Transformation;

use Imbo\Model\Image;
use Imbo\Exception\TransformationException;
use PHPUnit\Framework\TestCase;
use Imagick;
use ImagickException;

/**
 * @coversDefaultClass Imbo\Image\Transformation\Sharpen
 */
class SharpenTest extends TestCase {
    public function getSharpenPresets() : array {
        return [
            [
                ['preset' => 'foobar'],
                2,
                1,
                1,
                0.05,
            ],
            [
                ['preset' => 'light'],
                2,
                1,
                1,
                0.05,
            ],
            [
                ['preset' => 'moderate'],
                2,
                1,
                2,
                0.05,
            ],
            [
                ['preset' => 'strong'],
                 2,
                1,
                3,
                0.025,
            ],
            [
                ['preset' => 'extreme'],
                2,
                1,
                4,
                0,
            ],
            [
                ['preset' => 'light', 'radius' => 10, 'sigma' => 11, 'gain' => 12, 'threshold' => 13],
                10,
                11,
                12,
                13,
            ],
        ];
    }

    /**
     * @dataProvider getSharpenPresets
     * @covers ::transform
     */
    public function testCanSharpen(array $params, ?float $radius, ?float $sigma, ?float $gain, ?float $threshold) : void {
        $image = $this->createMock(Image::class);
        $image
            ->expects($this->once())
            ->method('hasBeenTransformed')
            ->with(true);

        $imagick = $this->createMock(Imagick::class);
        $imagick
            ->expects($this->once())
            ->method('unsharpMaskImage')
            ->with($radius, $sigma, $gain, $threshold);

        (new Sharpen())
            ->setImage($image)
            ->setImagick($imagick)
            ->transform($params);
    }

    /**
     * @covers ::transform
     */
    public function testThrowsExceptionOnError() : void {
        $imagick = $this->createMock(Imagick::class);
        $imagick
            ->expects($this->once())
            ->method('unsharpMaskImage')
            ->willThrowException($e = new ImagickException('some error'));

        $this->expectExceptionObject(new TransformationException('some error', 400, $e));

        (new Sharpen())
            ->setImagick($imagick)
            ->transform([]);
    }
}
