name: CI build
on: push
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests
    services:
      mongodb:
        image: mongo:4.2.8
        ports:
          - 27017:27017

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: imagick

      - uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install

      - name: Run unit tests using PHPUnit
        run: composer run test:phpunit

  integration-tests-mongodb-gridfs:
    runs-on: ubuntu-latest
    name: Integration tests (MongoDB / GridFS)
    services:
      mongodb:
        image: mongo:4.2.8
        ports:
          - 27017:27017

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: imagick

      - uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install

      - name: Start PHP web server
        run: composer run dev --timeout=0 &

      - name: Run integration tests using Behat
        run: composer run test:behat:mongodb-gridfs

      - uses: actions/upload-artifact@v2
        with:
          name: httpd-logs-mongodb-gridfs
          path: build/logs

  integration-tests-mongodb-filesystem:
    runs-on: ubuntu-latest
    name: Integration tests (MongoDB / Filesystem)
    services:
      mongodb:
        image: mongo:4.2.8
        ports:
          - 27017:27017

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: imagick

      - uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install

      - name: Start PHP web server
        run: composer run dev --timeout=0 &

      - name: Run integration tests using Behat
        run: composer run test:behat:mongodb-filesystem

      - uses: actions/upload-artifact@v2
        with:
          name: httpd-logs-mongodb-filesystem
          path: build/logs

  integration-tests-doctrine-sqlite-filesystem:
    runs-on: ubuntu-latest
    name: Integration tests (SQLite / Filesystem)
    services:
      mongodb:
        image: mongo:4.2.8
        ports:
          - 27017:27017

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: imagick

      - uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install

      - name: Start PHP web server
        run: composer run dev --timeout=0 &

      - name: Run integration tests using Behat
        run: composer run test:behat:doctrine-sqlite-filesystem

      - uses: actions/upload-artifact@v2
        with:
          name: httpd-logs-doctrine-sqlite-filesystem
          path: build/logs

  integration-tests-doctrine-mysql-filesystem:
    runs-on: ubuntu-latest
    name: Integration tests (MySQL / Filesystem)
    services:
      mongodb:
        image: mongo:4.2.8
        ports:
          - 27017:27017
      mysql:
        image: mysql:8.0.20
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: imbo_test
          MYSQL_USER: imbo_test
          MYSQL_PASSWORD: imbo_test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: imagick

      - uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install

      - name: Start PHP web server
        run: composer run dev --timeout=0 &

      - name: Update MySQL configuration for the Behat suite
        run: |
          sed -i 's/\(database.port: \)3306/\1${{ job.services.mysql.ports['3306'] }}/g' behat.yml.dist
          sed -i 's/\(database.hostname: \)localhost/\1127.0.0.1/g' behat.yml.dist
          echo "Updated Behat configuration file:"
          echo "================================="
          cat behat.yml.dist
          echo "================================="

      - name: Run integration tests using Behat
        run: composer run test:behat:doctrine-mysql-filesystem

      - uses: actions/upload-artifact@v2
        with:
          name: httpd-logs-doctrine-mysql-filesystem
          path: build/logs
